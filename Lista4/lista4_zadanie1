#!/bin/bash

arr1=(0 0 0 0 0 0 0 0 0 0 0)
arr2=(0 0 0 0 0 0 0 0 0 0 0)
delta1=(0 0 0 0 0 0 0 0 0 0)
delta2=(0 0 0 0 0 0 0 0 0 0)
cd /proc
while [ 1 -eq 1 ]; do
 clear
 battery=$(sudo cat /sys/class/power_supply/BAT0/uevent | grep -w 'POWER_SUPPLY_CAPACITY' | sed 's/POWER_SUPPLY_CAPACITY=//')
 battery="${battery} % battery remaining"
 procload=$(cat /proc/loadavg | awk '{print $1}' )
 procload="${procload} processes running per minute"
 sysrun=$(cat /proc/uptime | awk '{print $1}' )
 sysrun=$(LC_NUMERIC="en_US.UTF-8" printf '%.0f' $sysrun)
 syssec=$(($sysrun % 60))
 sysrun=$(($sysrun - $syssec))
 sysrun=$(($sysrun / 60))
 sysmin=$(($sysrun % 60))
 sysrun=$(($sysrun - $sysmin))
 sysrun=$(($sysrun / 60))
 sysh=$(($sysrun % 60))
 sysrun=$(($sysrun-$sysh))
 sysrun=$(($sysrun / 60))
 sysday=$(($sysrun % 24))
 sysrun="System running for ${sysday} days, ${sysh} hours, ${sysmin} minutes, ${syssec} seconds"
 data="\n${battery}\n${procload}\n${sysrun}"
 inf1=$(cat /proc/net/dev | awk '{print $(9+1)}' | grep '[0-9]' | tr '\n' ' ' | awk '{print $1}')
 inf2=$(cat /proc/net/dev | awk '{print $(9+1)}' | grep '[0-9]' | tr '\n' ' ' | awk '{print $2}')
 for  index in {0..9} ; do
  arr1[$index]="${arr1[$index+1]}"
  arr2[$index]="${arr2[$index+1]}"
 done

 arr1[10]=$inf1
 arr2[10]=$inf2
 max1=0
 max2=0
 avg1=0
 avg2=0

 for index in {0..9} ; do
  delta1[$index]=$(("${arr1[$index+1]}" - "${arr1[$index]}"))
  delta2[$index]=$(("${arr2[$index+1]}" - "${arr2[$index]}"))
 done

 for index in {0..9} ; do
  if [ "${delta1[$index]}" -gt $max1 ] ; then
   max1="${delta1[$index]}"
  fi
  if [ "${delta2[$index]}" -gt $max2 ] ; then
   max2="${delta2[$index]}"
  fi
 avg1=$(($avg1+"${delta1[$index]}"))
 avg2=$(($avg2+"${delta2[$index]}"))
 done

 avg1=$(($avg1/10))
 avg2=$(($avg2/10))

 if [ $avg1 -lt 1000 ]; then
  avg1scale="B/s"
 elif [ $avg1 -lt 1000000 ]; then
  avg1scale="kB/s"
  avg1=$(($avg1/1000))
 else
  avg1scale="MB/s"
  avg1=$(($avg1/1000000))
 fi

 if [ $avg2 -lt 1000 ]; then
  avg2scale="B/s"
 elif [ $avg2 -lt 1000000 ]; then
  avg2scale="kB/s"
  avg2=$(($avg2/1000))
 else
  avg2scale="MB/s"
  avg2=$(($avg2/1000000))
 fi

 if [ $max1 -lt 1000 ]; then
  max1scale=1
  max1unit="B/s"
 elif [ $max1 -lt 1000000 ]; then
  max1scale=1000
  max1=$(($max1/1000))
  max1unit="kB/s"
 else
  max1scale=100000
  max1=$(($max1/1000000))
  max1unit="MB/s"
 fi
 
 if [ $max2 -lt 1000 ]; then
  max2scale=1
  max2unit="B/s"
 elif [ $max2 -lt 1000000 ]; then
  max2scale=1000
  max2unit="kB/s"
  max2=$(($max2/1000))
 else
  max2scale=1000000
  max2unit="MB/s"
  max2=$(($max2/1000000))
 fi
 znak="â–‰"
 plot1=""
 plot2=""
 for i in {0..9} ; do
  for j in {0..9} ; do
   helper=$(("${delta1[$j]}"/$max1scale))
   if [ $max1 -eq 0 ]; then
    max1=1
   fi
   helper=$(($helper*10/$max1))
   h=$((10-$i))
   if [ $helper -ge $h ] ; then
    plot1="$plot1$znak"
   else
    plot1="$plot1 "
   fi
  done
  plot1="$plot1\n"
 done

 for i in {0..9} ; do
  for j in {0..9} ; do
   helper=$(("${delta2[$j]}"/$max2scale))
   if [ $max2 -eq 0 ]; then
    max2=1
   fi
   helper=$(($helper*10/$max2))
   h=$((10-$i))
   if [ $helper -ge $h ] ; then
    plot2="$plot2$znak"
   else
    plot2="$plot2 "
   fi
  done
  plot2="$plot2\n"
 done
 echo -e "$data\nenp0s3\ndelta1\n"${delta1[*]}"\navg $avg1 $avg1scale\nmax $max1 $max1unit\n$plot1\nlo\ndelta2\n"${delta2[*]}"\navg $avg2 $avg2scale\nmax $max2 $max2unit\n$plot2"
 sleep 1
done
